<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Samsara Young&#39;s Blog</title>
  
  <subtitle>黑夜给了我黑色的眼睛, 我却用它来寻找光明，还有别人路上掉落的硬币!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://samsarayoung.github.io/"/>
  <updated>2018-07-14T17:30:03.104Z</updated>
  <id>https://samsarayoung.github.io/</id>
  
  <author>
    <name>Samsara Young</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android之ListView</title>
    <link href="https://samsarayoung.github.io/2018/06/20/Android%E4%B9%8BListView/"/>
    <id>https://samsarayoung.github.io/2018/06/20/Android之ListView/</id>
    <published>2018-06-20T12:36:37.000Z</published>
    <updated>2018-07-14T17:30:03.104Z</updated>
    
    <content type="html"><![CDATA[<p>ListView可以是Android开发过程中非常常用的控件，几乎所有的应用程序都需要用到它，因此我们需要掌握ListView。<br>ListView主要是以列表的形式来展现具体内容的并可以根据数据的长度通过滑动来显示更多的数据，当我们需要显示大量的数据的时候，我们就可以使用ListView来实现它。</p><h2 id="ListView的基本属性"><a href="#ListView的基本属性" class="headerlink" title="ListView的基本属性"></a>ListView的基本属性</h2><p>列表的显示需要三个元素：</p><p>1．ListVeiw 用来展示列表的View，即item。</p><p>2．适配器Adapter 用来把数据映射到ListView上的中介。</p><p>3．数据    具体的将被映射的字符串，图片，或者基本组件。</p><h3 id="ListView原理"><a href="#ListView原理" class="headerlink" title="ListView原理"></a>ListView原理</h3><h4 id="ListView的实现离不开Adapter。可以这么理解：ListView中给出了数据来的时候，View如何-实现的具体方式，相当于MVC中的V；而Adapter提供了相当于MVC中的C，指挥了ListView-的数据加载等行为。"><a href="#ListView的实现离不开Adapter。可以这么理解：ListView中给出了数据来的时候，View如何-实现的具体方式，相当于MVC中的V；而Adapter提供了相当于MVC中的C，指挥了ListView-的数据加载等行为。" class="headerlink" title="ListView的实现离不开Adapter。可以这么理解：ListView中给出了数据来的时候，View如何 实现的具体方式，相当于MVC中的V；而Adapter提供了相当于MVC中的C，指挥了ListView 的数据加载等行为。"></a>ListView的实现离不开<code>Adapter</code>。可以这么理解：ListView中给出了数据来的时候，<code>View</code>如何 实现的具体方式，相当于<code>MVC</code>中的<code>V</code>；而<code>Adapter</code>提供了相当于<code>MVC</code>中的<code>C</code>，指挥了ListView 的数据加载等行为。</h4><h2 id="ListView的常用属性"><a href="#ListView的常用属性" class="headerlink" title="ListView的常用属性"></a>ListView的常用属性</h2><ol><li><p>android:cacheColorHint：拖动背景的缓存色，需要用图片做背景时可以将android:cacheColorHint指定为透明（#00000000）。</p></li><li><p>android:divider：使用一个Drawable或者color设置分割线样式，设置这个属性为”@null”时不显示分割线。                            </p></li><li><p>android:dividerHeight：设置分割线的间隔距离。</p></li><li><p>android:drawSelectorOnTop：设置这个属性为”true”时点击某一条记录，颜色会显示在最上面，记录上的文字被遮住，所以点击文字不放，文字就看不到；<br>设置这个属性为”false”时点击某条记录不放，颜色会在记录的后面，成为背景色，但是记录内容的文字是可见的。</p></li><li><p>android:entries：设置一个资源Id，用于填充ListView的数据项。</p></li><li><p>android:fadingEdge： 设置这个属性为”none” 设置后去掉上边和下边的阴影。</p></li><li><p>android:fadeScrollbars： 设置这个属性为”true”时就可以实现滚动条的自动隐藏和显示。</p></li><li><p>android:android:fastScrollEnabled：设置这个属性为”true”时快速滚动滑块。</p></li><li><p>android:transcriptMode：设置这个属性为”alwaysScroll” 时自动滑动到最底部。</p><h2 id="ListView的进阶"><a href="#ListView的进阶" class="headerlink" title="ListView的进阶"></a>ListView的进阶</h2><h3 id="ListView的优化-以异步加载Bitmap优化为例"><a href="#ListView的优化-以异步加载Bitmap优化为例" class="headerlink" title="ListView的优化(以异步加载Bitmap优化为例)"></a>ListView的优化(以异步加载<code>Bitmap</code>优化为例)</h3><h4 id="首先概括的说ListView优化分为三级缓存"><a href="#首先概括的说ListView优化分为三级缓存" class="headerlink" title="首先概括的说ListView优化分为三级缓存:"></a>首先概括的说ListView优化分为三级缓存:</h4></li></ol><ul><li>内存缓存 </li><li>文件缓存 </li><li>网络读取</li></ul><h4 id="简要概括就是在getView中，如果加载过一个图片，放入Map类型的一个MemoryCache中-示-例代码使用的是Collections-synchronizedMap-new-LinkedHashMap-10-1-5f-true-来维护一-个试用LRU的堆-。如果这里获取不到，根据View被Recycle之前放入的TAG中记录的uri从文-件系统中读取文件缓存。如果本地都找不到，再去网络中异步加载。"><a href="#简要概括就是在getView中，如果加载过一个图片，放入Map类型的一个MemoryCache中-示-例代码使用的是Collections-synchronizedMap-new-LinkedHashMap-10-1-5f-true-来维护一-个试用LRU的堆-。如果这里获取不到，根据View被Recycle之前放入的TAG中记录的uri从文-件系统中读取文件缓存。如果本地都找不到，再去网络中异步加载。" class="headerlink" title="简要概括就是在getView中，如果加载过一个图片，放入Map类型的一个MemoryCache中(示 例代码使用的是Collections.synchronizedMap(new    LinkedHashMap(10,    1.5f,    true))来维护一 个试用LRU的堆)。如果这里获取不到，根据View被Recycle之前放入的TAG中记录的uri从文 件系统中读取文件缓存。如果本地都找不到，再去网络中异步加载。"></a>简要概括就是在<code>getView</code>中，如果加载过一个图片，放入<code>Map</code>类型的一个<code>MemoryCache</code>中(示 例代码使用的是<code>Collections.synchronizedMap(new    LinkedHashMap(10,    1.5f,    true))</code>来维护一 个试用<code>LRU</code>的堆)。如果这里获取不到，根据<code>View</code>被<code>Recycle</code>之前放入的<code>TAG</code>中记录的uri从文 件系统中读取文件缓存。如果本地都找不到，再去网络中异步加载。</h4><h4 id="这里有几个注意的优化点："><a href="#这里有几个注意的优化点：" class="headerlink" title="这里有几个注意的优化点："></a>这里有几个注意的优化点：</h4><ol><li><p>从文件系统中加载图片也没有内存中加载那么快，甚至可能内存中加载也不够快。因此在ListView中应设立<code>busy</code>标志位，当ListView滚动时<code>busy</code>设为<code>true</code>，停止各个<code>view</code>的图片加载。否则可能会让UI不够流畅用户体验度降低。</p></li><li><p>文件加载图片放在子线程实现，否则快速滑动屏幕会卡。</p></li><li><p>开启网络访问等耗时操作需要开启新线程，应使用线程池避免资源浪费，最起码也要用 <code>AsyncTask</code>。</p></li><li><p><code>Bitmap</code>从网络下载下来最好先放到文件系统中缓存。这样一是方便下一次加载根据本地 uri直接找到，二是如果<code>Bitmap</code>过大，从本地缓存可以方便的使用<code>Option.inSampleSize</code>配 合<code>Bitmap.decodeFile(ui,    options)或Bitmap.createScaledBitmap</code>来进行内存压缩。</p></li></ol><h2 id="ListView的用法"><a href="#ListView的用法" class="headerlink" title="ListView的用法"></a>ListView的用法</h2><h3 id="主要参考步骤及代码"><a href="#主要参考步骤及代码" class="headerlink" title="主要参考步骤及代码"></a>主要参考步骤及代码</h3><p>1) 定义一个实体类 ListViews，作为 ListView 适配器的适配类型。</p><p>2) 为 ListView 的子项指定一个我们自定义的布局 module_list_item.xml。</p><p>3) 创建一个自定义的适配器 MyListViewAdapter，这个适配器继承自 BaesAdapter。重写构造方法和 getView 方法。</p><p>4)在MainActivity中编写，初始化数据源，给ListView设置adapter。</p><h4 id="实体类ListViews代码："><a href="#实体类ListViews代码：" class="headerlink" title="实体类ListViews代码："></a>实体类ListViews代码：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public class ListViews &#123;</span><br><span class="line"></span><br><span class="line">    private String mName;</span><br><span class="line">    private int mId;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">ListViews</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ListViews(String mName, int mId) &#123;</span><br><span class="line">        this.mName = mName;</span><br><span class="line">        this.mId = mId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> mName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="function"><span class="title">setName</span></span>() &#123;</span><br><span class="line">        this.mName = mName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int <span class="function"><span class="title">getId</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> mId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="function"><span class="title">setId</span></span>() &#123;</span><br><span class="line">        this.mId = mId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="布局文件module-activity-mylistview-xml："><a href="#布局文件module-activity-mylistview-xml：" class="headerlink" title="布局文件module_activity_mylistview.xml："></a>布局文件module_activity_mylistview.xml：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    &gt;</span><br><span class="line"></span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=<span class="string">"@+id/lv"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        android:divider=<span class="string">"#f4f4f4"</span></span><br><span class="line">        android:dividerHeight=<span class="string">"1dp"</span></span><br><span class="line">        &gt;</span><br><span class="line">    &lt;/ListView&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h4 id="布局文件module-list-item-xml："><a href="#布局文件module-list-item-xml：" class="headerlink" title="布局文件module_list_item .xml："></a>布局文件module_list_item .xml：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">              android:orientation=<span class="string">"horizontal"</span></span><br><span class="line">              android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">              android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">   &lt;ImageView</span><br><span class="line">    android:id=<span class="string">"@+id/iv"</span></span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_weight=<span class="string">"1"</span></span><br><span class="line">       /&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">"@+id/tv"</span></span><br><span class="line">        android:layout_width=<span class="string">"0dp"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_weight=<span class="string">"1"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h4 id="相应的Activity代码："><a href="#相应的Activity代码：" class="headerlink" title="相应的Activity代码："></a>相应的Activity代码：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public class MyListView extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @BindView(R.id.lv)</span><br><span class="line">    ListView mLv;</span><br><span class="line">    private List&lt;ListViews&gt; mArrayList = null;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private MyListViewAdapter mMyListViewAdapter = null;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.module_activity_mylistview);</span><br><span class="line"></span><br><span class="line">        ButterKnife.bind(this);</span><br><span class="line">        //初始化数据</span><br><span class="line">        init();</span><br><span class="line"></span><br><span class="line">        mContext = MyListView.this;</span><br><span class="line"></span><br><span class="line">        // 创建并设置Adapter</span><br><span class="line">        mMyListViewAdapter = new MyListViewAdapter(mContext, (LinkedList&lt;ListViews&gt;) mArrayList);</span><br><span class="line">        mLv.setAdapter(mMyListViewAdapter);</span><br><span class="line"></span><br><span class="line">        //设置item点击监听事件</span><br><span class="line">        mLv.setOnItemClickListener(new AdapterView.<span class="function"><span class="title">OnItemClickListener</span></span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) &#123;</span><br><span class="line">                Toast.makeText(MyListView.this, (mArrayList.get(position).getName()), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        mArrayList = new LinkedList&lt;ListViews&gt;();</span><br><span class="line">        ListViews a = new ListViews(<span class="string">"周杰伦"</span>, R.drawable.module_singer_a_normal);</span><br><span class="line">        mArrayList.add(a);</span><br><span class="line">        ListViews b = new ListViews(<span class="string">"薛之谦"</span>, R.drawable.module_singer_b_normal);</span><br><span class="line">        mArrayList.add(b);</span><br><span class="line">        ListViews c = new ListViews(<span class="string">"林俊杰"</span>, R.drawable.module_singer_c_normal);</span><br><span class="line">        mArrayList.add(c);</span><br><span class="line">        ListViews d = new ListViews(<span class="string">"光良"</span>, R.drawable.module_singer_d_normal);</span><br><span class="line">        mArrayList.add(d);</span><br><span class="line">        ListViews e = new ListViews(<span class="string">"李荣浩"</span>, R.drawable.module_singer_e_normal);</span><br><span class="line">        mArrayList.add(e);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相应适配器MyListViewAdapter代码："><a href="#相应适配器MyListViewAdapter代码：" class="headerlink" title="相应适配器MyListViewAdapter代码："></a>相应适配器MyListViewAdapter代码：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">public class MyListViewAdapter extends BaseAdapter &#123;</span><br><span class="line">    private LinkedList&lt;ListViews&gt; mList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private LayoutInflater inflater;</span><br><span class="line">    private ViewHolder mViewHolder;</span><br><span class="line"></span><br><span class="line">    public MyListViewAdapter(Context mContext, LinkedList&lt;ListViews&gt; mList) &#123;</span><br><span class="line">        this.mList = mList;</span><br><span class="line">        this.inflater = LayoutInflater.from(mContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int <span class="function"><span class="title">getCount</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> mList == null ? 0 : mList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Object getItem(int position) &#123;</span><br><span class="line">        <span class="built_in">return</span> mList == null ? null : mList.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public long getItemId(int position) &#123;</span><br><span class="line">        <span class="built_in">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public View getView(int position, View convertView, ViewGroup parent) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (convertView == null) &#123;</span><br><span class="line">            mViewHolder = new ViewHolder();</span><br><span class="line">            convertView = inflater.inflate(R.layout.module_list_item, parent, <span class="literal">false</span>);</span><br><span class="line">            mViewHolder.mTv = (TextView) convertView.findViewById(R.id.tv);</span><br><span class="line">            mViewHolder.mIv = (ImageView) convertView.findViewById(R.id.iv);</span><br><span class="line"></span><br><span class="line">            //储存ViewHolder</span><br><span class="line">            convertView.setTag(mViewHolder);</span><br><span class="line"></span><br><span class="line">            ;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            //重新获取ViewHolder对象</span><br><span class="line">            mViewHolder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        mViewHolder.mIv.setImageResource(mList.get(position).getId());</span><br><span class="line">        mViewHolder.mTv.setText(mList.get(position).getName());</span><br><span class="line">        <span class="built_in">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static class ViewHolder &#123;</span><br><span class="line">        TextView mTv;</span><br><span class="line">        ImageView mIv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws1.sinaimg.cn/large/007c0oXwgy1fswz436vc3j309z0fyq53.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ListView可以是Android开发过程中非常常用的控件，几乎所有的应用程序都需要用到它，因此我们需要掌握ListView。&lt;br&gt;ListView主要是以列表的形式来展现具体内容的并可以根据数据的长度通过滑动来显示更多的数据，当我们需要显示大量的数据的时候，我们就可以
      
    
    </summary>
    
      <category term="Android ，ListView" scheme="https://samsarayoung.github.io/categories/Android-%EF%BC%8CListView/"/>
    
    
      <category term="Android，ListView" scheme="https://samsarayoung.github.io/tags/Android%EF%BC%8CListView/"/>
    
  </entry>
  
  <entry>
    <title>Android 开发常用小技巧</title>
    <link href="https://samsarayoung.github.io/2018/05/25/Android-%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>https://samsarayoung.github.io/2018/05/25/Android-开发常用小技巧/</id>
    <published>2018-05-25T09:36:37.000Z</published>
    <updated>2018-05-26T13:18:49.896Z</updated>
    
    <content type="html"><![CDATA[<p>总所周知，Android Studio是安卓开发最好的工具，也是现在大把多数Android开发者最主要的开发工具，因此，使用好Android Studio快捷键和插件等开发小技巧还是很有必要的。</p><h2 id="Android-Studio-快捷键"><a href="#Android-Studio-快捷键" class="headerlink" title="Android Studio 快捷键"></a>Android Studio 快捷键</h2><h3 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Alt+L</span><br></pre></td></tr></table></figure><h3 id="合并成一行"><a href="#合并成一行" class="headerlink" title="合并成一行"></a>合并成一行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + J</span><br></pre></td></tr></table></figure><h3 id="全局搜索"><a href="#全局搜索" class="headerlink" title="全局搜索"></a>全局搜索</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">双击Shift</span><br></pre></td></tr></table></figure><h3 id="布局查询"><a href="#布局查询" class="headerlink" title="布局查询"></a>布局查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + F</span><br></pre></td></tr></table></figure><h3 id="按关键字全局搜索"><a href="#按关键字全局搜索" class="headerlink" title="按关键字全局搜索"></a>按关键字全局搜索</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+F</span><br></pre></td></tr></table></figure><h3 id="查看调用的地方"><a href="#查看调用的地方" class="headerlink" title="查看调用的地方"></a>查看调用的地方</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt+F7</span><br></pre></td></tr></table></figure><h3 id="代码自动修正"><a href="#代码自动修正" class="headerlink" title="代码自动修正"></a>代码自动修正</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt+Enter</span><br></pre></td></tr></table></figure><h3 id="全局修改"><a href="#全局修改" class="headerlink" title="全局修改"></a>全局修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift+F6</span><br></pre></td></tr></table></figure><h3 id="快速转换进行大小写"><a href="#快速转换进行大小写" class="headerlink" title="快速转换进行大小写"></a>快速转换进行大小写</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+U</span><br></pre></td></tr></table></figure><h3 id="移动代码"><a href="#移动代码" class="headerlink" title="移动代码"></a>移动代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+上下键</span><br></pre></td></tr></table></figure><h3 id="向下复制"><a href="#向下复制" class="headerlink" title="向下复制"></a>向下复制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+D</span><br></pre></td></tr></table></figure><h3 id="去除无用包名"><a href="#去除无用包名" class="headerlink" title="去除无用包名"></a>去除无用包名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Alt+O</span><br></pre></td></tr></table></figure><h3 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+J</span><br></pre></td></tr></table></figure><h3 id="多行编辑"><a href="#多行编辑" class="headerlink" title="多行编辑"></a>多行编辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt+J</span><br></pre></td></tr></table></figure><h2 id="Android-Studio-插件"><a href="#Android-Studio-插件" class="headerlink" title="Android Studio 插件"></a>Android Studio 插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Settings → Plugin → Browse repositories</span><br></pre></td></tr></table></figure><h3 id="Ailbaba-Java-Coding-Guidelines"><a href="#Ailbaba-Java-Coding-Guidelines" class="headerlink" title="Ailbaba Java Coding Guidelines"></a>Ailbaba Java Coding Guidelines</h3><ul><li>阿里巴巴自动化IDE检测开发规范</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Settings → Plugin → Browse repositories → Ailbaba Java Coding Guidelines</span><br></pre></td></tr></table></figure><h3 id="GsonFromat-json"><a href="#GsonFromat-json" class="headerlink" title="GsonFromat json"></a>GsonFromat json</h3><ul><li>快速生成实体类</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt+S</span><br></pre></td></tr></table></figure><h3 id="ButterKnife-Zelezny"><a href="#ButterKnife-Zelezny" class="headerlink" title="ButterKnife Zelezny"></a>ButterKnife Zelezny</h3><ul><li>一键生成注解</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+B (鼠标需放在布局文件ID上)</span><br></pre></td></tr></table></figure><h3 id="Lifecycle-Sorter"><a href="#Lifecycle-Sorter" class="headerlink" title="Lifecycle Sorter"></a>Lifecycle Sorter</h3><p> -Activiity/Fragment 生命周期排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + alt + K</span><br></pre></td></tr></table></figure><h3 id="Lint-Cleaner-Plugin"><a href="#Lint-Cleaner-Plugin" class="headerlink" title="Lint Cleaner Plugin"></a>Lint Cleaner Plugin</h3><p> -自动清理无用资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle lintClean</span><br></pre></td></tr></table></figure><h3 id="Android-Parcelable-code-generator"><a href="#Android-Parcelable-code-generator" class="headerlink" title="Android Parcelable code generator"></a>Android Parcelable code generator</h3><p> -快速实现Parcelable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alt + insert → Parcelable</span><br></pre></td></tr></table></figure><h2 id="Android-Studio-小技巧"><a href="#Android-Studio-小技巧" class="headerlink" title="Android Studio 小技巧"></a>Android Studio 小技巧</h2><h3 id="设置-author-data……"><a href="#设置-author-data……" class="headerlink" title="设置@author,@data……"></a>设置@author,@data……</h3><p> -注释插入作者、日期等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Setting → File and Code Templates</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;总所周知，Android Studio是安卓开发最好的工具，也是现在大把多数Android开发者最主要的开发工具，因此，使用好Android Studio快捷键和插件等开发小技巧还是很有必要的。&lt;/p&gt;
&lt;h2 id=&quot;Android-Studio-快捷键&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="Android Studio" scheme="https://samsarayoung.github.io/categories/Android-Studio/"/>
    
    
      <category term="Android" scheme="https://samsarayoung.github.io/tags/Android/"/>
    
      <category term="Android Studio" scheme="https://samsarayoung.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://samsarayoung.github.io/2018/05/23/hello-world/"/>
    <id>https://samsarayoung.github.io/2018/05/23/hello-world/</id>
    <published>2018-05-22T16:52:18.108Z</published>
    <updated>2018-05-26T13:31:15.517Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="https://samsarayoung.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://samsarayoung.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
